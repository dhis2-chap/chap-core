services:
  redis:
    image: redis:7.4.0
    container_name: redis
    networks:
      - chap-network

  chap:
    depends_on:
      - redis
      - worker
      - postgres
    container_name: chap
    build: .
    environment:
      - GOOGLE_SERVICE_ACCOUNT_EMAIL=${GOOGLE_SERVICE_ACCOUNT_EMAIL}
      - GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY=${GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHAP_DATABASE_URL=postgresql://root:thisisnotgoingtobeexposed@postgres:5432/chap_core
      - CELERY_BROKER=redis://redis:6379/0
      - IS_IN_DOCKER=1
    ports:
      - "8000:8000"
    expose:
      - "8000"
    command: /app/.venv/bin/chap serve
    working_dir: /app
    networks:
      - chap-network

  worker:
    container_name: worker
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile.inla
    environment:
      - GOOGLE_SERVICE_ACCOUNT_EMAIL=${GOOGLE_SERVICE_ACCOUNT_EMAIL}
      - GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY=${GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY}
      - IS_IN_DOCKER=1
      - CHAP_DATABASE_URL=postgresql://root:thisisnotgoingtobeexposed@postgres:5432/chap_core
      - CELERY_BROKER=redis://redis:6379
      - C_FORCE_ROOT=1 #TODO: Remove this when we have a proper user
    command: "/app/.venv/bin/celery -A chap_core.rest_api.celery_tasks worker --loglevel=info"
    working_dir: /app
    networks:
      - chap-network

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: thisisnotgoingtobeexposed
      POSTGRES_DB: chap_core
    volumes:
      - chap-db:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - chap-network

networks:
  chap-network:
    driver: bridge

volumes:
  chap-db: {}
